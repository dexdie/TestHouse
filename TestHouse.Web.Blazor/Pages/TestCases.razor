@page "/project/{ProjectId:int}"
@inject TestHouse.Web.Blazor.Services.ProjectService _projectService;
@inject TestHouse.Web.Blazor.Services.SuitService _suitService;
@using TestHouse.DTOs.DTOs
@using TestHouse.DTOs.Models
@using TestHouse.Web.Blazor.Components;

<main class="section">
    <div class="container">
        <div class="columns">
            <div class="column">

                @if (Project == null)
                {
                    <p><em>Loading...</em></p>
                }
                else
                {
                    <Breadcrumb ActivePages=@ActivePages />

                    <Tab ActiveName="TestCases" ProjectId="@ProjectId" />

                    <div class="columns">
                        <div class="column">

                            <ul class="suit-list">
                                <li>
                                    <nav class="level suit-root">

                                        <div class="level-left">
                                            <div class="level-item">
                                                <p class="subtitle is-5">@Project.Name&nbsp;(@(Project.RootSuit.Suits != null ? Project.RootSuit.Suits.Count() : 0))</p>
                                            </div>
                                        </div>

                                        <div class="level-right @(IsSuitActive || IsTestCaseActive ? " is-hidden" : "")">
                                            <div class="level-item">
                                                <a class="button is-small is-primary" onclick="@ChangeSuitActivity()">
                                                    <span class="icon">
                                                        <i class="fas fa-plus" />
                                                    </span>
                                                    <span>Section</span>
                                                </a>
                                            </div>

                                            <div class="level-item last-child">
                                                <a class="button is-small is-primary" onclick="@ChangeSuitActivity">
                                                    <span class="icon">
                                                        <i class="fas fa-plus" />
                                                    </span>
                                                    <span>TestCase</span>
                                                </a>
                                            </div>
                                        </div>

                                        <div class="level-right @(IsSuitActive ? "" : " is-hidden")">
                                            <div class="level-item">
                                                <div class="field has-addons">
                                                    <p class="control">
                                                        <input class="input is-small add-item-input" type="text" placeholder="New section name" bind="@NewSuitName" />
                                                    </p>
                                                    <p class="control">
                                                        <button class="button is-small is-success" onclick="@(AddNewSuit(NewSuitName, Project.RootSuit.Id))">
                                                            <span class="icon">
                                                                <i class="fas fa-plus" />
                                                            </span>
                                                        </button>
                                                    </p>
                                                    <p class="control">
                                                        <button class="button is-small is-danger" onclick="@ChangeSuitActivity">
                                                            <span class="icon">
                                                                <i class="fas fa-minus" />
                                                            </span>
                                                        </button>
                                                    </p>
                                                </div>
                                            </div>
                                        </div>

                                        <div class="level-right @(IsTestCaseActive ? " " : " is-hidden")">
                                            <div class="level-item">
                                                <div class="field has-addons">
                                                    <p class="control">
                                                        <input class="input is-small add-item-input" type="text" placeholder="New testcase name">
                                                    </p>
                                                    <p class="control">
                                                        <button class="button is-small is-success" onclick="@ChangeTestCaseActivity">
                                                            <span class="icon">
                                                                <i class="fas fa-plus" />
                                                            </span>
                                                        </button>
                                                    </p>
                                                    <p class="control">
                                                        <button class="button is-small is-danger" onclick="@ChangeTestCaseActivity">
                                                            <span class="icon">
                                                                <i class="fas fa-minus" />
                                                            </span>
                                                        </button>
                                                    </p>
                                                </div>
                                            </div>
                                        </div>

                                    </nav>

                                    <Items Suit=Project.RootSuit />

                                </li>
                            </ul>
                        </div>
                    </div>
                }

            </div>
        </div>
    </div>
</main>

@functions{
    [Parameter] private int ProjectId { get; set; } = 0;
    private bool IsSuitActive { get; set; } = false;
    private bool IsTestCaseActive { get; set; } = false;
    private string NewSuitName { get; set; } = "";
    private ProjectAggregateDto Project { get; set; } = null;

    private List<PageId> ActivePages = new List<PageId>() { PageId.Projects, PageId.Cases };

    protected override void OnInit()
    {
        try
        {
            Project = _projectService.GetProject(ProjectId).Result;
        }
        catch (Exception e)
        {
            Console.WriteLine("exc" + e.GetType() + e.Message);
        }
    }

    private object ChangeSuitActivity()
    {
        IsSuitActive = IsSuitActive ? false : true;
        return null;
    }

    private object ChangeTestCaseActivity()
    {
        IsTestCaseActive = IsTestCaseActive ? false : true;
        return null;
    }

    private async Task AddNewSuit(string name, long parentId)
    {
        SuitModel suit = new SuitModel()
        {
            Name = name,
            ProjectId = Project.Id
        };

        try
        {
            var newSuit = await _suitService.Add(suit);

            Project.RootSuit.Suits = (Project.RootSuit.Suits != null)
                ? Project.RootSuit.Suits.Append(newSuit)
                : new List<SuitDto>() { newSuit };

            NewSuitName = "";

            IsSuitActive = false;
        }
        catch (Exception e)
        {
            Console.WriteLine("exc" + e.GetType() + e.Message);
        }
    }
}
