@page "/project/{ProjectId:int}"
@inject TestHouse.Web.Blazor.Services.ProjectService _projectService;
@inject TestHouse.Web.Blazor.Services.SuitService _suitService;
@using Microsoft.AspNetCore.Blazor.Services
@using TestHouse.DTOs.DTOs
@using TestHouse.DTOs.Models
@using TestHouse.Web.Blazor.Components;

<main class="section">
    <div class="container">
        <div class="columns">
            <div class="column">

                @if (project == null)
                {
                    <p><em>Loading...</em></p>
                }
                else
                {
                    <Breadcrumb ActivePages=@ActivePages />

                    <Tab ActiveName="TestCases" ProjectId="@ProjectId" />

                    <div class="columns">
                        <div class="column">

                            <ul class="suit-list">
                                <li>
                                    <nav class="level suit-root">
                                        <div class="level-left">
                                            <div class="level-item">
                                                <p class="subtitle is-5">@project.Name&nbsp;(@(project.RootSuit.Suits != null ? @project.RootSuit.Suits.Count() : 0))</p>
                                            </div>
                                        </div>
                                        <div class="level-right">

                                            <div class="level-item @(isSuitModalActive ? " is-hidden")">
                                                <a class="button is-small is-primary" onclick="@ShowSuitModal">
                                                    <span class="icon">
                                                        <i class="fas fa-plus" />
                                                    </span>
                                                    <span>Section</span>
                                                </a>
                                            </div>

                                            <div class="level-item last-child @(isSuitModalActive ? " is-hidden")">
                                                <a class="button is-small is-primary" onclick="@ShowTestCaseModal">
                                                    <span class="icon">
                                                        <i class="fas fa-plus" />
                                                    </span>
                                                    <span>TestCase</span>
                                                </a>
                                            </div>

                                            <div class="level-item @(!isSuitModalActive ? "" : " is-hidden")">
                                                <div class="field has-addons">
                                                    <p class="control">
                                                        <input class="input is-small add-item-input" type="text" placeholder="New section name">
                                                    </p>
                                                    <p class="control">
                                                        <button class="button is-small is-success" onclick="@ShowSuitModal">
                                                            <span class="icon">
                                                                <i class="fas fa-plus" />
                                                            </span>
                                                        </button>
                                                    </p>
                                                    <p class="control">
                                                        <button class="button is-small is-danger" onclick="@CloseSuiteModal">
                                                            <span class="icon">
                                                                <i class="fas fa-minus" />
                                                            </span>
                                                        </button>
                                                    </p>
                                                </div>
                                            </div>

                                        </div>
                                    </nav>

                                    @if (project.RootSuit.Suits != null)
                                    {
                                        <ul>
                                            @foreach (var suit in project.RootSuit.Suits)
                                            {
                                                <li>
                                                    <nav class="level suit">
                                                        <div class="level-left">
                                                            <div class="level-item">
                                                                <p class="subtitle is-6">@suit.Name&nbsp;(@(suit.TestCases != null ? @suit.TestCases.Count() : 0))</p>
                                                            </div>
                                                        </div>
                                                        <div class="level-right">
                                                            <div class="level-item">
                                                                <a class="button is-small is-primary" onclick="@ShowSuitModal">
                                                                    <span class="icon">
                                                                        <i class="fas fa-plus" />
                                                                    </span>
                                                                    <span>Subsection</span>
                                                                </a>
                                                            </div>
                                                            <div class="level-item">
                                                                <a class="button is-small is-primary" onclick="@ShowTestCaseModal">
                                                                    <span class="icon">
                                                                        <i class="fas fa-plus" />
                                                                    </span>
                                                                    <span>TestCase</span>
                                                                </a>
                                                            </div>
                                                        </div>
                                                    </nav>
                                                </li>
                                            }
                                        </ul>
                                    }
                                </li>
                            </ul>
                        </div>
                    </div>
                }

            </div>
        </div>
    </div>
</main>


@functions {
    [Parameter]
    int ProjectId { get; set; }

    List<PageId>
    ActivePages = new List<PageId>
        () { PageId.Projects, PageId.Cases };

    bool isSuitModalActive;
    bool isTestCaseModalActive;

    ProjectAggregateDto project;
    SuitModel suitForm = new SuitModel();

    protected override async Task OnInitAsync()
    {
        try
        {
            project = await _projectService.GetProject(ProjectId);

        }
        catch (Exception e)
        {
            Console.WriteLine("exc" + e.GetType() + e.Message);
        }
    }

    private void ShowSuitModal() => isSuitModalActive = true;
    private void CloseSuiteModal() => isSuitModalActive = false;

    private void ShowTestCaseModal() => isTestCaseModalActive = true;
    private void CloseTestCaseModal() => isTestCaseModalActive = false;

    private async Task SubmitProjectForm()
    {
        suitForm.ProjectId = project.Id;
        var newSuit = await _suitService.Add(suitForm);

        //if (project.RootSuit.Suits == null)
        //{
        //    project.RootSuit.Suits = new List<SuitDto>() { newSuit };
        //}
        //else
        //{
        //    project.RootSuit.Suits.ToList().Add(newSuit);
        //}

        suitForm = new SuitModel();
        CloseSuiteModal();
    }
}
