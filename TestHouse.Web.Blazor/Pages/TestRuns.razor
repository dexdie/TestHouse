@page "/project/{ProjectId:int}/test-run"
@inject TestHouse.Web.Blazor.Services.ProjectService _projectService;
@inject TestHouse.Web.Blazor.Services.SuitService _suitService;
@using Microsoft.AspNetCore.Blazor.Services
@using TestHouse.DTOs.DTOs
@using TestHouse.DTOs.Models
@using TestHouse.Web.Blazor.Components;
@using TestHouse.Web.Blazor.Components.Project;

<main class="section">
    <div class="container">
        <div class="columns">
            <div class="column">

                @if (project == null)
                {
                    <p><em>Loading...</em></p>
                }
                else
                {


                    <Tab ActiveName="Test Runs & Results" ProjectId="@ProjectId" />

                    <Breadcrumb ActivePages=@ActivePages />

                    <div class="container">

                        <div class="level">
                            <div class="level-left">
                                <div class="content">
                                    <h1>@project.Name</h1>
                                    <p>@project.Description</p>
                                </div>                                
                            </div>
                            <div class="level-right">
                                <NavLink href="@($"/project/{ProjectId}/test-run/new")" class="button is-primary">
                                    <span class="icon">
                                        <i class="fas fa-plus" />
                                    </span>
                                    <span>New test run</span>
                                </NavLink>
                            </div>
                        </div>
                        

                        

                        @if (project.TestRuns != null)
                        {

                            <div class="timeline">
                                <header class="timeline-header">
                                    <span class="tag is-medium is-light">Today</span>
                                </header>

                                @foreach (var testRun in project.TestRuns)
                                {
                                    <div class="timeline-item">
                                        <div class="timeline-marker"></div>
                                        <div class="timeline-content">
                                            <p class="heading">@testRun.CreatedAt.ToString("dd MMMM yyyy")</p>
                                            <div class="test-run-card columns">
                                                <div class="column is-half">
                                                    <div class="columns">
                                                        <div class="column is-three-quarters">
                                                            <h3 class="title is-4">@testRun.Name</h3>
                                                            <p class="subtitle is-6">@testRun.Description</p>
                                                        </div>
                                                        <div class="column is-one-quarter">
                                                            <span class="test-run-card-actions">
                                                                <a href="/project/@project.Id" class="button is-small is-primary is-outlined"><span class="icon is-small"><i class="fas fa-angle-right"></i></span></a>
                                                                <a href="#" class="button is-small is-primary is-outlined"><span class="icon is-small"><i class="fas fa-edit"></i></span></a>
                                                                <a href="#" class="button is-small is-primary is-outlined"> <span class="icon is-small"><i class="fas fa-trash"></i></span></a>
                                                            </span>
                                                        </div>

                                                    </div>                                                                                                        
                                                </div>
                                                <div class="column info">
                                                    <p class="subtitle is-4">@(testRun.TestCases?.Count() ?? 0)</p>
                                                    <p>Test cases number</p>
                                                </div>
                                                <div class="column info">
                                                    <p class="subtitle is-4">@(testRun.TestCases?.Count() ?? 0)</p>
                                                    <p>Test cases number</p>
                                                </div>

                                            </div>
                                        </div>
                                    </div>
                                }
                                <div class="timeline-header">
                                    <span class="tag is-medium is-light"></span>
                                </div>
                            </div>


                        }

                    </div>
                }

            </div>
        </div>
    </div>
</main>


@code {
    [Parameter]
    int ProjectId { get; set; }

    List<PageId> ActivePages = new List<PageId>() { PageId.Projects, PageId.Runs };

    bool isSuitModalActive;
    bool isTestCaseModalActive;

    ProjectAggregateDto project;
    SuitModel suitForm = new SuitModel();

    protected override async Task OnInitializedAsync()
    {
        try
        {
            project = await _projectService.GetProject(ProjectId);

        }
        catch (Exception e)
        {
            Console.WriteLine("exc" + e.GetType() + e.Message);
        }
    }


    private async Task SubmitProjectForm()
    {
        suitForm.ProjectId = project.Id;
        var newSuit = await _suitService.Add(suitForm);

        //if (project.RootSuit.Suits == null)
        //{
        //    project.RootSuit.Suits = new List<SuitDto>() { newSuit };
        //}
        //else
        //{
        //    project.RootSuit.Suits.ToList().Add(newSuit);
        //}

        suitForm = new SuitModel();

    }
}
